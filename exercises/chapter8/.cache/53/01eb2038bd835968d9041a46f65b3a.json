{"id":"../output/Data.Void/index.js","dependencies":[{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Data.Void/index.js.map","includedInParent":true,"mtime":1585476658378},{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/.spago/prelude/v4.1.1/src/Data/Void.purs","includedInParent":true,"mtime":1585416327910},{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/package.json","includedInParent":true,"mtime":1585424477455},{"name":"../Data.Show/index.js","loc":{"line":3,"column":24},"parent":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Data.Void/index.js","resolved":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Data.Show/index.js"}],"generated":{"js":"// Generated by purs version 0.13.6\n\"use strict\";\n\nvar Data_Show = require(\"../Data.Show/index.js\");\n\nvar Void = function Void(x) {\n  return x;\n};\n\nvar absurd = function absurd(a) {\n  var spin = function spin($copy_v) {\n    var $tco_result;\n\n    function $tco_loop(v) {\n      $copy_v = v;\n      return;\n    }\n\n    ;\n\n    while (!false) {\n      $tco_result = $tco_loop($copy_v);\n    }\n\n    ;\n    return $tco_result;\n  };\n\n  return spin(a);\n};\n\nvar showVoid = new Data_Show.Show(absurd);\nmodule.exports = {\n  absurd: absurd,\n  showVoid: showVoid\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":0}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":4}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":13}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":16}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":23}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":24}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":47}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":48}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":10,"column":0},"generated":{"line":6,"column":0}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":10,"column":0},"generated":{"line":6,"column":4}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":10,"column":0},"generated":{"line":6,"column":8}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":10,"column":0},"generated":{"line":6,"column":11}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":10,"column":0},"generated":{"line":6,"column":20}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":10,"column":0},"generated":{"line":6,"column":24}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":10,"column":0},"generated":{"line":6,"column":25}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":10,"column":0},"generated":{"line":6,"column":26}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":10,"column":0},"generated":{"line":6,"column":28}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":10,"column":0},"generated":{"line":7,"column":9}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":10,"column":0},"generated":{"line":8,"column":1}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":0}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":4}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":10}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":13}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":22}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":28}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":29}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":30}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":24,"column":0},"generated":{"line":10,"column":32}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":2},"generated":{"line":11,"column":0}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":2},"generated":{"line":11,"column":6}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":2},"generated":{"line":11,"column":10}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":2},"generated":{"line":11,"column":13}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":2},"generated":{"line":11,"column":22}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":2},"generated":{"line":11,"column":26}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":2},"generated":{"line":11,"column":27}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":2},"generated":{"line":11,"column":34}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":2},"generated":{"line":11,"column":36}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":8},"generated":{"line":15,"column":0}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":8},"generated":{"line":15,"column":6}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":8},"generated":{"line":15,"column":13}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":2},"generated":{"line":15,"column":16}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":8},"generated":{"line":15,"column":17}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":8},"generated":{"line":16,"column":0}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":27,"column":2},"generated":{"line":27,"column":3}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":25,"column":11},"generated":{"line":29,"column":9}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":25,"column":11},"generated":{"line":29,"column":13}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":25,"column":16},"generated":{"line":29,"column":14}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":25,"column":11},"generated":{"line":29,"column":15}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":24,"column":0},"generated":{"line":30,"column":1}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":0}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":4}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":12}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":15}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":19}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":28}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":29}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":33}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":13,"column":9},"generated":{"line":32,"column":34}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":40}},{"source":"../../.spago/prelude/v4.1.1/src/Data/Void.purs","name":null,"original":{"line":12,"column":0},"generated":{"line":32,"column":41}}],"sources":{"../../.spago/prelude/v4.1.1/src/Data/Void.purs":"module Data.Void (Void, absurd) where\n\nimport Data.Show (class Show)\n\n-- | An uninhabited data type.\n-- |\n-- | `Void` is useful to eliminate the possibility of a value being created.\n-- | For example, a value of type `Either Void Boolean` can never have\n-- | a Left value created in PureScript.\nnewtype Void = Void Void\n\ninstance showVoid :: Show Void where\n  show = absurd\n\n-- | Eliminator for the `Void` type.\n-- | Useful for stating that some code branch is impossible because you've\n-- | \"acquired\" a value of type `Void` (which you can't).\n-- |\n-- | ```purescript\n-- | rightOnly :: forall t . Either Void t -> t\n-- | rightOnly (Left v) = absurd v\n-- | rightOnly (Right t) = t\n-- | ```\nabsurd :: forall a. Void -> a\nabsurd a = spin a\n  where\n  spin (Void b) = spin b\n"},"lineCount":null}},"error":null,"hash":"654ab486fe0d8e697aa750bf836ac58e","cacheData":{"env":{}}}