{"id":"../output/Data.Function.Uncurried/index.js","dependencies":[{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Data.Function.Uncurried/index.js.map","includedInParent":true,"mtime":1585476658458},{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","includedInParent":true,"mtime":1585416327734},{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/package.json","includedInParent":true,"mtime":1585424477455},{"name":"./foreign.js","loc":{"line":3,"column":23},"parent":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Data.Function.Uncurried/index.js","resolved":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Data.Function.Uncurried/foreign.js"}],"generated":{"js":"// Generated by purs version 0.13.6\n\"use strict\";\n\nvar $foreign = require(\"./foreign.js\");\n\nvar runFn1 = function runFn1(f) {\n  return f;\n};\n\nvar mkFn1 = function mkFn1(f) {\n  return f;\n};\n\nmodule.exports = {\n  mkFn1: mkFn1,\n  runFn1: runFn1,\n  mkFn0: $foreign.mkFn0,\n  mkFn2: $foreign.mkFn2,\n  mkFn3: $foreign.mkFn3,\n  mkFn4: $foreign.mkFn4,\n  mkFn5: $foreign.mkFn5,\n  mkFn6: $foreign.mkFn6,\n  mkFn7: $foreign.mkFn7,\n  mkFn8: $foreign.mkFn8,\n  mkFn9: $foreign.mkFn9,\n  mkFn10: $foreign.mkFn10,\n  runFn0: $foreign.runFn0,\n  runFn2: $foreign.runFn2,\n  runFn3: $foreign.runFn3,\n  runFn4: $foreign.runFn4,\n  runFn5: $foreign.runFn5,\n  runFn6: $foreign.runFn6,\n  runFn7: $foreign.runFn7,\n  runFn8: $foreign.runFn8,\n  runFn9: $foreign.runFn9,\n  runFn10: $foreign.runFn10\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":76,"column":0},"generated":{"line":6,"column":0}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":76,"column":0},"generated":{"line":6,"column":4}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":76,"column":0},"generated":{"line":6,"column":10}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":76,"column":0},"generated":{"line":6,"column":13}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":76,"column":0},"generated":{"line":6,"column":22}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":76,"column":0},"generated":{"line":6,"column":28}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":76,"column":0},"generated":{"line":6,"column":29}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":76,"column":0},"generated":{"line":6,"column":30}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":76,"column":0},"generated":{"line":6,"column":32}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":77,"column":11},"generated":{"line":7,"column":9}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":76,"column":0},"generated":{"line":8,"column":1}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":42,"column":0},"generated":{"line":10,"column":0}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":42,"column":0},"generated":{"line":10,"column":4}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":42,"column":0},"generated":{"line":10,"column":9}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":42,"column":0},"generated":{"line":10,"column":12}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":42,"column":0},"generated":{"line":10,"column":21}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":42,"column":0},"generated":{"line":10,"column":26}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":42,"column":0},"generated":{"line":10,"column":27}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":42,"column":0},"generated":{"line":10,"column":28}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":42,"column":0},"generated":{"line":10,"column":30}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":43,"column":10},"generated":{"line":11,"column":9}},{"source":"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs","name":null,"original":{"line":42,"column":0},"generated":{"line":12,"column":1}}],"sources":{"../../.spago/functions/v4.0.0/src/Data/Function/Uncurried.purs":"module Data.Function.Uncurried where\n\nimport Data.Unit (Unit)\n\n-- | A function of zero arguments\nforeign import data Fn0 :: Type -> Type\n\n-- | A function of one argument\ntype Fn1 a b = a -> b\n\n-- | A function of two arguments\nforeign import data Fn2 :: Type -> Type -> Type -> Type\n\n-- | A function of three arguments\nforeign import data Fn3 :: Type -> Type -> Type -> Type -> Type\n\n-- | A function of four arguments\nforeign import data Fn4 :: Type -> Type -> Type -> Type -> Type -> Type\n\n-- | A function of five arguments\nforeign import data Fn5 :: Type -> Type -> Type -> Type -> Type -> Type -> Type\n\n-- | A function of six arguments\nforeign import data Fn6 :: Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type\n\n-- | A function of seven arguments\nforeign import data Fn7 :: Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type\n\n-- | A function of eight arguments\nforeign import data Fn8 :: Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type\n\n-- | A function of nine arguments\nforeign import data Fn9 :: Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type\n\n-- | A function of ten arguments\nforeign import data Fn10 :: Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type -> Type\n\n-- | Create a function of no arguments\nforeign import mkFn0 :: forall a. (Unit -> a) -> Fn0 a\n\n-- | Create a function of one argument\nmkFn1 :: forall a b. (a -> b) -> Fn1 a b\nmkFn1 f = f\n\n-- | Create a function of two arguments from a curried function\nforeign import mkFn2 :: forall a b c. (a -> b -> c) -> Fn2 a b c\n\n-- | Create a function of three arguments from a curried function\nforeign import mkFn3 :: forall a b c d. (a -> b -> c -> d) -> Fn3 a b c d\n\n-- | Create a function of four arguments from a curried function\nforeign import mkFn4 :: forall a b c d e. (a -> b -> c -> d -> e) -> Fn4 a b c d e\n\n-- | Create a function of five arguments from a curried function\nforeign import mkFn5 :: forall a b c d e f. (a -> b -> c -> d -> e -> f) -> Fn5 a b c d e f\n\n-- | Create a function of six arguments from a curried function\nforeign import mkFn6 :: forall a b c d e f g. (a -> b -> c -> d -> e -> f -> g) -> Fn6 a b c d e f g\n\n-- | Create a function of seven arguments from a curried function\nforeign import mkFn7 :: forall a b c d e f g h. (a -> b -> c -> d -> e -> f -> g -> h) -> Fn7 a b c d e f g h\n\n-- | Create a function of eight arguments from a curried function\nforeign import mkFn8 :: forall a b c d e f g h i. (a -> b -> c -> d -> e -> f -> g -> h -> i) -> Fn8 a b c d e f g h i\n\n-- | Create a function of nine arguments from a curried function\nforeign import mkFn9 :: forall a b c d e f g h i j. (a -> b -> c -> d -> e -> f -> g -> h -> i -> j) -> Fn9 a b c d e f g h i j\n\n-- | Create a function of ten arguments from a curried function\nforeign import mkFn10 :: forall a b c d e f g h i j k. (a -> b -> c -> d -> e -> f -> g -> h -> i -> j -> k) -> Fn10 a b c d e f g h i j k\n\n-- | Apply a function of no arguments\nforeign import runFn0 :: forall a. Fn0 a -> a\n\n-- | Apply a function of one argument\nrunFn1 :: forall a b. Fn1 a b -> a -> b\nrunFn1 f = f\n\n-- | Apply a function of two arguments\nforeign import runFn2 :: forall a b c. Fn2 a b c -> a -> b -> c\n\n-- | Apply a function of three arguments\nforeign import runFn3 :: forall a b c d. Fn3 a b c d -> a -> b -> c -> d\n\n-- | Apply a function of four arguments\nforeign import runFn4 :: forall a b c d e. Fn4 a b c d e -> a -> b -> c -> d -> e\n\n-- | Apply a function of five arguments\nforeign import runFn5 :: forall a b c d e f. Fn5 a b c d e f -> a -> b -> c -> d -> e -> f\n\n-- | Apply a function of six arguments\nforeign import runFn6 :: forall a b c d e f g. Fn6 a b c d e f g -> a -> b -> c -> d -> e -> f -> g\n\n-- | Apply a function of seven arguments\nforeign import runFn7 :: forall a b c d e f g h. Fn7 a b c d e f g h -> a -> b -> c -> d -> e -> f -> g -> h\n\n-- | Apply a function of eight arguments\nforeign import runFn8 :: forall a b c d e f g h i. Fn8 a b c d e f g h i -> a -> b -> c -> d -> e -> f -> g -> h -> i\n\n-- | Apply a function of nine arguments\nforeign import runFn9 :: forall a b c d e f g h i j. Fn9 a b c d e f g h i j -> a -> b -> c -> d -> e -> f -> g -> h -> i -> j\n\n-- | Apply a function of ten arguments\nforeign import runFn10 :: forall a b c d e f g h i j k. Fn10 a b c d e f g h i j k -> a -> b -> c -> d -> e -> f -> g -> h -> i -> j -> k\n"},"lineCount":null}},"error":null,"hash":"47ce98efbd07d5c4d37e84e49ab9d8ee","cacheData":{"env":{}}}