{"id":"../output/Data.String.Common/index.js","dependencies":[{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Data.String.Common/index.js.map","includedInParent":true,"mtime":1585476659922},{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/.spago/strings/v4.0.1/src/Data/String/Common.purs","includedInParent":true,"mtime":1585416327946},{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/package.json","includedInParent":true,"mtime":1585424477455},{"name":"./foreign.js","loc":{"line":3,"column":23},"parent":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Data.String.Common/index.js","resolved":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Data.String.Common/foreign.js"},{"name":"../Data.Ordering/index.js","loc":{"line":4,"column":28},"parent":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Data.String.Common/index.js","resolved":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Data.Ordering/index.js"}],"generated":{"js":"// Generated by purs version 0.13.6\n\"use strict\";\n\nvar $foreign = require(\"./foreign.js\");\n\nvar Data_Ordering = require(\"../Data.Ordering/index.js\");\n\nvar $$null = function $$null(s) {\n  return s === \"\";\n};\n\nvar localeCompare = $foreign[\"_localeCompare\"](Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);\nmodule.exports = {\n  \"null\": $$null,\n  localeCompare: localeCompare,\n  replace: $foreign.replace,\n  replaceAll: $foreign.replaceAll,\n  split: $foreign.split,\n  toLower: $foreign.toLower,\n  toUpper: $foreign.toUpper,\n  trim: $foreign.trim,\n  joinWith: $foreign.joinWith\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":0}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":4}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":17}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":20}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":27}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":28}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":55}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":6,"column":56}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":23,"column":0},"generated":{"line":8,"column":0}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":23,"column":0},"generated":{"line":8,"column":4}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":23,"column":0},"generated":{"line":8,"column":10}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":23,"column":0},"generated":{"line":8,"column":13}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":23,"column":0},"generated":{"line":8,"column":22}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":23,"column":0},"generated":{"line":8,"column":28}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":23,"column":0},"generated":{"line":8,"column":29}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":23,"column":0},"generated":{"line":8,"column":30}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":23,"column":0},"generated":{"line":8,"column":32}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":24,"column":9},"generated":{"line":9,"column":9}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":24,"column":9},"generated":{"line":9,"column":10}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":24,"column":14},"generated":{"line":9,"column":15}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":23,"column":0},"generated":{"line":10,"column":1}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":0}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":4}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":17}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":20}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":28}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":29}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":45}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":46}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":47}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":60}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":61}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":63}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":64}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":69}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":71}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":84}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":85}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":87}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":88}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":93}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":95}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":108}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":109}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":111}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":112}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":117}},{"source":"../../.spago/strings/v4.0.1/src/Data/String/Common.purs","name":null,"original":{"line":34,"column":0},"generated":{"line":12,"column":118}}],"sources":{"../../.spago/strings/v4.0.1/src/Data/String/Common.purs":"module Data.String.Common\n  ( null\n  , localeCompare\n  , replace\n  , replaceAll\n  , split\n  , toLower\n  , toUpper\n  , trim\n  , joinWith\n  ) where\n\nimport Prelude\n\nimport Data.String.Pattern (Pattern, Replacement)\n\n-- | Returns `true` if the given string is empty.\n-- |\n-- | ```purescript\n-- | null \"\" == true\n-- | null \"Hi\" == false\n-- | ```\nnull :: String -> Boolean\nnull s = s == \"\"\n\n-- | Compare two strings in a locale-aware fashion. This is in contrast to\n-- | the `Ord` instance on `String` which treats strings as arrays of code\n-- | units:\n-- |\n-- | ```purescript\n-- | \"ä\" `localeCompare` \"b\" == LT\n-- | \"ä\" `compare` \"b\" == GT\n-- | ```\nlocaleCompare :: String -> String -> Ordering\nlocaleCompare = _localeCompare LT EQ GT\n\nforeign import _localeCompare\n  :: Ordering\n  -> Ordering\n  -> Ordering\n  -> String\n  -> String\n  -> Ordering\n\n-- | Replaces the first occurence of the pattern with the replacement string.\n-- |\n-- | ```purescript\n-- | replace (Pattern \"<=\") (Replacement \"≤\") \"a <= b <= c\" == \"a ≤ b <= c\"\n-- | ```\nforeign import replace :: Pattern -> Replacement -> String -> String\n\n-- | Replaces all occurences of the pattern with the replacement string.\n-- |\n-- | ```purescript\n-- | replaceAll (Pattern \"<=\") (Replacement \"≤\") \"a <= b <= c\" == \"a ≤ b ≤ c\"\n-- | ```\nforeign import replaceAll :: Pattern -> Replacement -> String -> String\n\n-- | Returns the substrings of the second string separated along occurences\n-- | of the first string.\n-- |\n-- | ```purescript\n-- | split (Pattern \" \") \"hello world\" == [\"hello\", \"world\"]\n-- | ```\nforeign import split :: Pattern -> String -> Array String\n\n-- | Returns the argument converted to lowercase.\n-- |\n-- | ```purescript\n-- | toLower \"hElLo\" == \"hello\"\n-- | ```\nforeign import toLower :: String -> String\n\n-- | Returns the argument converted to uppercase.\n-- |\n-- | ```purescript\n-- | toUpper \"Hello\" == \"HELLO\"\n-- | ```\nforeign import toUpper :: String -> String\n\n-- | Removes whitespace from the beginning and end of a string, including\n-- | [whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)\n-- | and [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).\n-- |\n-- | ```purescript\n-- | trim \"   Hello  \\n World\\n\\t    \" == \"Hello  \\n World\"\n-- | ```\nforeign import trim :: String -> String\n\n-- | Joins the strings in the array together, inserting the first argument\n-- | as separator between them.\n-- |\n-- | ```purescript\n-- | joinWith \", \" [\"apple\", \"banana\", \"orange\"] == \"apple, banana, orange\"\n-- | ```\nforeign import joinWith :: String -> Array String -> String\n"},"lineCount":null}},"error":null,"hash":"e7d082b96b5ed7d0f01c926c191d02ce","cacheData":{"env":{}}}