{"id":"../output/Control.MonadPlus/index.js","dependencies":[{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Control.MonadPlus/index.js.map","includedInParent":true,"mtime":1585476659286},{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/.spago/control/v4.1.0/src/Control/MonadPlus.purs","includedInParent":true,"mtime":1531870256000},{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/package.json","includedInParent":true,"mtime":1585424477455},{"name":"../Control.MonadZero/index.js","loc":{"line":3,"column":32},"parent":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Control.MonadPlus/index.js","resolved":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Control.MonadZero/index.js"}],"generated":{"js":"// Generated by purs version 0.13.6\n\"use strict\";\n\nvar Control_MonadZero = require(\"../Control.MonadZero/index.js\");\n\nvar MonadPlus = function MonadPlus(MonadZero0) {\n  this.MonadZero0 = MonadZero0;\n};\n\nvar monadPlusArray = new MonadPlus(function () {\n  return Control_MonadZero.monadZeroArray;\n});\nmodule.exports = {\n  MonadPlus: MonadPlus,\n  monadPlusArray: monadPlusArray\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":0}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":4}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":21}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":24}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":31}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":32}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":63}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":1,"column":0},"generated":{"line":4,"column":64}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":29,"column":0},"generated":{"line":6,"column":0}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":29,"column":0},"generated":{"line":6,"column":4}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":29,"column":0},"generated":{"line":6,"column":13}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":29,"column":0},"generated":{"line":6,"column":16}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":29,"column":0},"generated":{"line":6,"column":25}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":29,"column":0},"generated":{"line":6,"column":34}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":29,"column":0},"generated":{"line":6,"column":35}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":29,"column":0},"generated":{"line":6,"column":45}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":29,"column":0},"generated":{"line":6,"column":47}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":29,"column":0},"generated":{"line":8,"column":1}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":31,"column":0},"generated":{"line":10,"column":0}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":31,"column":0},"generated":{"line":10,"column":4}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":31,"column":0},"generated":{"line":10,"column":18}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":31,"column":0},"generated":{"line":10,"column":21}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":31,"column":0},"generated":{"line":10,"column":25}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":31,"column":0},"generated":{"line":10,"column":34}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":31,"column":0},"generated":{"line":10,"column":35}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":31,"column":0},"generated":{"line":10,"column":47}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":31,"column":0},"generated":{"line":12,"column":1}},{"source":"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs","name":null,"original":{"line":31,"column":0},"generated":{"line":12,"column":2}}],"sources":{"../../.spago/control/v4.1.0/src/Control/MonadPlus.purs":"module Control.MonadPlus\n  ( class MonadPlus\n  , module Control.Alt\n  , module Control.Alternative\n  , module Control.Applicative\n  , module Control.Apply\n  , module Control.Bind\n  , module Control.Monad\n  , module Control.MonadZero\n  , module Control.Plus\n  , module Data.Functor\n  ) where\n\nimport Control.Alt (class Alt, alt, (<|>))\nimport Control.Alternative (class Alternative)\nimport Control.Applicative (class Applicative, pure, liftA1, unless, when)\nimport Control.Apply (class Apply, apply, (*>), (<*), (<*>))\nimport Control.Bind (class Bind, bind, ifM, join, (<=<), (=<<), (>=>), (>>=))\nimport Control.Monad (class Monad, ap, liftM1)\nimport Control.MonadZero (class MonadZero, guard)\nimport Control.Plus (class Plus, empty)\n\nimport Data.Functor (class Functor, map, void, ($>), (<#>), (<$), (<$>))\n\n-- | The `MonadPlus` type class has no members of its own but extends\n-- | `MonadZero` with an additional law:\n-- |\n-- | - Distributivity: `(x <|> y) >>= f == (x >>= f) <|> (y >>= f)`\nclass MonadZero m <= MonadPlus m\n\ninstance monadPlusArray :: MonadPlus Array\n"},"lineCount":null}},"error":null,"hash":"b34c1142ec587252dbff13ce88142775","cacheData":{"env":{}}}