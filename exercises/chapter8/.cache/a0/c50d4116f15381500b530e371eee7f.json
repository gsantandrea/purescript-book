{"id":"../output/Type.Equality/index.js","dependencies":[{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/output/Type.Equality/index.js.map","includedInParent":true,"mtime":1585476658174},{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/.spago/type-equality/v3.0.0/src/Type/Equality.purs","includedInParent":true,"mtime":1585416327918},{"name":"/home/giuliano/prove/prove_purescript/purescript-book/exercises/chapter8/package.json","includedInParent":true,"mtime":1585424477455}],"generated":{"js":"// Generated by purs version 0.13.6\n\"use strict\";\n\nvar TypeEquals = function TypeEquals(from, to) {\n  this.from = from;\n  this.to = to;\n};\n\nvar to = function to(dict) {\n  return dict.to;\n};\n\nvar refl = new TypeEquals(function (a) {\n  return a;\n}, function (a) {\n  return a;\n});\n\nvar from = function from(dict) {\n  return dict.from;\n};\n\nmodule.exports = {\n  TypeEquals: TypeEquals,\n  to: to,\n  from: from,\n  refl: refl\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":4,"column":0}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":4,"column":4}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":4,"column":14}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":4,"column":17}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":4,"column":26}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":4,"column":36}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":4,"column":37}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":4,"column":41}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":4,"column":43}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":4,"column":45}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":4,"column":47}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":17,"column":0},"generated":{"line":7,"column":1}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":9,"column":0}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":9,"column":4}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":9,"column":6}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":9,"column":9}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":9,"column":18}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":9,"column":20}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":9,"column":21}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":9,"column":25}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":9,"column":27}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":10,"column":9}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":10,"column":13}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":10,"column":14}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":18,"column":2},"generated":{"line":11,"column":1}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":13,"column":0}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":13,"column":4}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":13,"column":8}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":13,"column":11}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":13,"column":15}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":13,"column":25}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":13,"column":26}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":13,"column":36}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":13,"column":37}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":13,"column":39}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":23,"column":11},"generated":{"line":14,"column":9}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":15,"column":1}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":15,"column":3}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":15,"column":13}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":15,"column":14}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":15,"column":16}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":22,"column":9},"generated":{"line":16,"column":9}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":17,"column":1}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":21,"column":0},"generated":{"line":17,"column":2}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":19,"column":0}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":19,"column":4}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":19,"column":8}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":19,"column":11}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":19,"column":20}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":19,"column":24}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":19,"column":25}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":19,"column":29}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":19,"column":31}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":20,"column":9}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":20,"column":13}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":20,"column":14}},{"source":"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs","name":null,"original":{"line":19,"column":2},"generated":{"line":21,"column":1}}],"sources":{"../../.spago/type-equality/v3.0.0/src/Type/Equality.purs":"module Type.Equality\n  ( class TypeEquals\n  , to\n  , from\n  ) where\n\n-- | This type class asserts that types `a` and `b`\n-- | are equal.\n-- |\n-- | The functional dependencies and the single\n-- | instance below will force the two type arguments\n-- | to unify when either one is known.\n-- |\n-- | Note: any instance will necessarily overlap with\n-- | `refl` below, so instances of this class should\n-- | not be defined in libraries.\nclass TypeEquals a b | a -> b, b -> a where\n  to :: a -> b\n  from :: b -> a\n\ninstance refl :: TypeEquals a a where\n  to a = a\n  from a = a\n"},"lineCount":null}},"error":null,"hash":"7eb4526add59fc8b01a2315944c9ee53","cacheData":{"env":{}}}